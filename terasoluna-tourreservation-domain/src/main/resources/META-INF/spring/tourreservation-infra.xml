<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath:/META-INF/spring/tourreservation-env.xml" />

    <!-- JPA -->
    <jpa:repositories base-package="org.terasoluna.tourreservation.domain.repository" />

    <bean class="org.springframework.orm.jpa.JpaTransactionManager"
        id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="jpaVendorAdapter"
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="false" />
        <property name="database" value="${database}" />
    </bean>

    <bean
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        id="entityManagerFactory">
        <property name="packagesToScan"
            value="org.terasoluna.tourreservation.domain.model" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="jpaPropertyMap">
            <util:map>
                <entry key="hibernate.hbm2ddl.auto" value="none" />
                <entry key="hibernate.ejb.naming_strategy"
                    value="org.hibernate.cfg.ImprovedNamingStrategy" />
                <entry key="hibernate.connection.charSet" value="UTF-8" />
                <entry key="hibernate.show_sql" value="false" />
                <entry key="hibernate.format_sql" value="false" />
                <entry key="hibernate.use_sql_comments" value="true" />
                <entry key="hibernate.jdbc.batch_size" value="30" />
                <entry key="hibernate.jdbc.fetch_size" value="100" />
            </util:map>
        </property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
        <property name="fetchSize" value="100" />
    </bean>

    <bean id="customerCodeSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="sequenceClass" value="java.lang.String" />
        <property name="nextValueQuery"
            value="SELECT TO_CHAR(nextval('CUSTOMER_CODE_SEQ'),'FM00000000') AS customerCode" />
        <property name="currentValueQuery"
            value="SELECT TO_CHAR(currval('CUSTOMER_CODE_SEQ'),'FM00000000') AS customerCode" />
    </bean>

    <bean id="reserveNoSeq" class="org.terasoluna.gfw.common.sequencer.JdbcSequencer">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="sequenceClass" value="java.lang.String" />
        <property name="nextValueQuery"
            value="SELECT TO_CHAR(nextval('RESERVE_NO_SEQ'),'FM00000000') AS customerCode" />
        <property name="currentValueQuery"
            value="SELECT TO_CHAR(currval('RESERVE_NO_SEQ'),'FM00000000') AS customerCode" />
    </bean>

</beans>
